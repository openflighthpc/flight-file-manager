#==============================================================================
# Copyright (C) 2021-present Alces Flight Ltd.
#
# This file is part of Flight File Manager.
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which is available at
# <https://www.eclipse.org/legal/epl-2.0>, or alternative license
# terms made available by Alces Flight Ltd - please direct inquiries
# about licensing to licensing@alces-flight.com.
#
# Flight File Manager is distributed in the hope that it will be useful, but
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
# IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS
# OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A
# PARTICULAR PURPOSE. See the Eclipse Public License 2.0 for more
# details.
#
# You should have received a copy of the Eclipse Public License 2.0
# along with Flight File Manager. If not, see:
#
#  https://opensource.org/licenses/EPL-2.0
#
# For more information on Flight File Manager, please visit:
# https://github.com/openflighthpc/flight-file-manager
#===============================================================================

#-------------------------------------------------------------------------------
# Bind Address
# The address the api will be launched on
# The environment variable flight_FILE_MANAGER_API_bind takes precedence
#-------------------------------------------------------------------------------
# bind_address: tcp://127.0.0.1:920

#-------------------------------------------------------------------------------
# Mount point
# The URL prefix that this service is mounted at on any reverse proxy.
# The environment variable flight_FILE_MANAGER_API_mount_point takes precedence.
#-------------------------------------------------------------------------------
# mount_point: /files

#-------------------------------------------------------------------------------
# Cloudcmd Launch Timeout
# Specify how long the cloudcmd process has to write its port. The process will
# be terminated if it does not return its port within this period.
# The environment variable flight_FILE_MANAGER_API_launch_timeout
#
# The time is given in seconds
#-------------------------------------------------------------------------------
# launch_timeout: 10

#-------------------------------------------------------------------------------
# Cloudcmd Command
# Specify the command that will launch the cloudcmd service.
# The environment variable flight_FILE_MANAGER_API_cloudcmd_command takes
# precedence.
#
# The command will be called with the options:
#
#   --config <config_path> --password <password> --port-path <port_path>
#
# `config_path` is a minimal pre-generated cloudcmd config for the
# particular user containing the username, prefix and root.
#
# `port_path` will be an empty file initially. It is the commands
# responsibility to select a port that cloudcmd will be started on and write
# it to this path. Failure to do so will prevent the API consumer from
# connecting to the service.
# NOTE: The port_path must only contain the port as an integer. It must not
#       contain a trailing newline.
#
# For security reasons, the command is not executed via a subshell. This means
# all other string interplation/ variables have been disabled. Each argument is
# interpreted as a literal string and should not be quoted.
#
# Relative paths are expanded from the install directory.
#-------------------------------------------------------------------------------
# cloudcmd_command: libexec/cloudcmd.sh

#-------------------------------------------------------------------------------
# Cloudcmd cookie name
# Specify the name to use for the cloudcmd cookie
# The environment variable flight_FILE_MANAGER_API_cloudcmd_cookie_name takes
# precedence
#-------------------------------------------------------------------------------
# cloudcmd_cookie_name: flight_file_manager_backend

#-------------------------------------------------------------------------------
# Cloudcmd cookie domain
# Specify the domain to use for the cloudcmd cookie
# The environment variable flight_FILE_MANAGER_API_cloudcmd_cookie_domain
# takes precedence
#-------------------------------------------------------------------------------
# cloudcmd_cookie_domain:

#-------------------------------------------------------------------------------
# Cloudcmd cookie path
# Specify the path to use for the cloudcmd cookie
# The environment variable flight_FILE_MANAGER_API_cloudcmd_cookie_path takes
# precedence
#-------------------------------------------------------------------------------
# cloudcmd_cookie_path: /files/backend

#-------------------------------------------------------------------------------
# Shared Secret Path
# The path to where the authentication shared secert is stored
# The environment variable flight_FILE_MANAGER_API_shared_secret_path takes
# precedence.
#
# Relative paths are expanded from the install directory.
#-------------------------------------------------------------------------------
# shared_secret_path: etc/shared-secret.conf

#-------------------------------------------------------------------------------
# Data Directory
# Specify the directory that internal runtime data
# The environment variable flight_FILE_MANAGER_API_data_dir takes precedence
#
# Relative paths are expanded from the install directory.
#-------------------------------------------------------------------------------
# data_dir: usr/share

#-------------------------------------------------------------------------------
# Log Directory
# Specify the directory log files are stored within
# The environment variable flight_FILE_MANAGER_API_log_dir takes precedence
#
# Relative paths are expanded from the install directory.
#-------------------------------------------------------------------------------
# log_dir: /path/to/flight_file_manager/var/log

#-------------------------------------------------------------------------------
# Log Level
# Specify the logging level
# The environment variable flight_FILE_MANAGER_API_log_level
# Valid levels are: fatal, error, warn, info, debug
#-------------------------------------------------------------------------------
# log_level: info

#-------------------------------------------------------------------------------
# SSO Cookie Name
# Specify the name to use for the sso cookie
# The environment variable flight_FILE_MANAGER_API_sso_cookie_name
#-------------------------------------------------------------------------------
# sso_cookie_name: flight_login
